services:
  db:
    build:
      context: ./db
    container_name: postgres_db
    environment:
      POSTGRES_DB: myapp_db
      POSTGRES_USER: myapp_user
      POSTGRES_PASSWORD: myapp_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - ./db/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myapp_user -d myapp_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  api:
    build:
      context: ./api
    container_name: django_api
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./api:/app
    environment:
      - DEBUG=1
      - DATABASE_NAME=myapp_db
      - DATABASE_USER=myapp_user
      - DATABASE_PASSWORD=myapp_password
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  front:
    build:
      context: ./front
    container_name: react_front
    volumes:
      - ./front:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost/api
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    networks:
      - app-network

  web:
    build:
      context: ./web
    container_name: nginx_web
    ports:
      - "80:80"
    volumes:
      - ./web/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
      - front
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: